buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
        karateVersion = '0.6.2'
        masterThought = '3.13.0'
    }
    repositories {
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.liquibase:liquibase-gradle-plugin:1.2.4"
        classpath('org.yaml:snakeyaml:1.15')
        classpath "org.liquibase.ext:liquibase-hibernate5:3.6"
    }
}

plugins {
    id 'org.liquibase.gradle' version '1.2.4'

}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.liquibase.gradle'
apply plugin: 'application'
//apply plugin: 'war'
// jar {
//     manifest {
//         attributes 'Main-Class': 'com.kabasakalis.springifyapi.SpringifyApiApplication'
//     }
// }


apply from: './gradle/profiles.gradle'
apply from: './gradle/db.gradle'

// bootRun {
//   systemProperties = System.properties
// }


group = 'com.kabasakalis'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
description = 'Hypermedia Driven Music API.'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/release" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/snapshot" }
    maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
}



sourceSets {
    test {
        java
                {
                    // Excluding UIRunner files as these require the javafx libraries
                    // which are not shipped with OpenJDK. These UIRunner classes are
                    // classes that allow developers to run/debug karate tests via a UI
                    // and as such are not required for headless runs on jenkins server
                    // but can run happily via IDE of the developer without needed to be
                    // compiled by gradle.
                    srcDir file('src/test/java')
                    exclude '**/*UiRunner*.java'
                }
        resources
                {
                    // Using recommended karate project layout where karate feature files
                    // and associated javascript resources sit in same /test/java folders
                    // as their java counterparts.
                    srcDir file('src/test/java')
                    exclude '**/*.java'
                }
    }
}


// task stage(type: Copy, dependsOn: [clean, build]) {
//     from jar.archivePath
//     into project.rootDir
//     rename {
//         'app.jar'
//     }
// }
// stage.mustRunAfter(clean)
//
// clean << {
//     project.file('app.jar').delete()
// }



task stage {
	// dependsOn build
	dependsOn assemble
}

jar {
	baseName = 'heroku-springify'
}




//  task stage {
//     // dependsOn installDist
//    dependsOn assemble
//  }

// test {
//     // pull cucumber options into the cucumber jvm
//     systemProperty "cucumber.options", System.properties.getProperty("cucumber.options")
//     // pull karate options into the jvm
//     systemProperty "karate.env", System.properties.getProperty("karate.env")
//     systemProperty "karate.adminpwd", findProperty("adminpwd")
//    // ensure tests are always run
//
//     outputs.upToDateWhen { false }
// }



configurations {
    providedRuntime
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-cache')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.data:spring-data-rest-hal-browser')
    compile('org.springframework.boot:spring-boot-starter-hateoas')
    compile('org.springframework.boot:spring-boot-starter-jersey')
    compile('org.springframework.boot:spring-boot-starter-jooq')
    compile('org.liquibase:liquibase-core')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile("io.jsonwebtoken:jjwt:0.9.0")
    compile('com.github.ulisesbocchio:jasypt-spring-boot-starter:1.16')
    compile group: 'org.postgresql', name: 'postgresql', version: '42.1.4'
    compile 'commons-io:commons-io:2.6'
    compile 'com.github.java-json-tools:json-schema-validator:2.2.8'
    //    Swagger - does not work because of no inheritance support for controllers.
//    compile "io.springfox:springfox-swagger2:2.7.1-SNAPSHOT"
//    compile "io.springfox:springfox-data-rest:2.7.1-SNAPSHOT"
//    compile 'io.springfox:springfox-swagger-ui:2.7.1-SNAPSHOT'
//    compile "io.springfox:springfox-bean-validators:2.7.1-SNAPSHOT"

    runtime('org.springframework.boot:spring-boot-devtools')
    compileOnly('org.springframework.boot:spring-boot-configuration-processor')
//    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')

    testCompile 'junit:junit'
    testCompile 'com.intuit.karate:karate-junit4:' + karateVersion
    testCompile 'com.intuit.karate:karate-apache:' + karateVersion
    testCompile 'net.masterthought:cucumber-reporting:' + masterThought
    testCompile 'ch.qos.logback:logback-classic:1.2.3'
    testCompile 'ch.qos.logback:logback-core:1.2.3'
}
